<?php

if (!defined('_PS_VERSION_')) {
    exit;
}
use \PrestaShop\PrestaShop\Core\Module\WidgetInterface;
require_once(_PS_MODULE_DIR_."categorietest/Classes/CategorieClass.php");
class Categorietest extends Module implements WidgetInterface {
    private $templateFile;

    public function __construct()

    {
        $this->name='categorietest';
        $this->author='NY';
        $this->version='1.0.0';
        $this->bootstrap=true;

        parent::__construct();
        $this->displayName=$this->trans('categorietest',array(),'Modules.categorie.Admin');
        $this->description=$this->trans('Allow admin to add categories',array(),'Modules.categorie.Admin');
        $this->ps_versions_compliancy=array('min'=>'1.7','max'=>_PS_VERSION_);

        $this->templateFile = 'module:categorietest/views/templates/hook/categorietest.tpl';
    }

    public function install()

    {
        $sql="
        CREATE TABLE IF NOT EXISTS ps_categorie(
              cat_id int(11) NOT NULL AUTO_INCREMENT,
              cat_ref VARCHAR(255) NOT NULL,
              cat_name VARCHAR(255) NOT NULL,
              cat_desc VARCHAR(255) NOT NULL,
              PRIMARY KEY (cat_id)
            )
        ";
        return parent::install() &&
            Db::getInstance()->execute($sql);
    }

    public function uninstall()
    {
        return parent::uninstall() &&
           Db::getInstance()->execute('DROP TABLE IF EXISTS`'._DB_PREFIX_.'categorie`'); // TODO: Change the autogenerated stub
    }

    public function renderWidget($hookName, array $configuration)
    {
        $this->smarty->assign($this->getWidgetVariables($hookName,$configuration));
        return $this->fetch($this->templateFile);
    }



    public function getWidgetVariables($hookName, array $configuration)
    {
        $message=null;
        $categorieList=null;
        $categorieId=null;
        //update data
        $id=null;
        $ref=null;
        $nom=null;
        $desc=null;
       

      
      // print_r((int)Tools::isSubmit('delete'));

        if(Tools::isSubmit('cat_ref','cat_name','cat_desc')){
            $categorietest=new CategorietestClass();
            $categorietest->cat_ref=Tools::getValue('cat_ref');
            $categorietest->cat_name=Tools::getValue('cat_name');
            $categorietest->cat_desc=Tools::getValue('cat_desc');
            if($categorietest->save()){
                $categorieList= array(
                    'message'=>$message.' '.$categorietest->cat_name
                );
            } }

            if(Tools::isSubmit('delete','id')){
              //  echo "im here";
                $categorieId=(int)Tools::getValue('id');
                //echo "$categorieId";
                $res = Db::getInstance()->executeS('SELECT `cat_id` FROM `'._DB_PREFIX_.'categorie` where cat_id =' .$categorieId);
               // $res->delete();
               if ($res) {
                   foreach ($res as $row) {
                       $p = new CategorietestClass($row['cat_id']);
                       $p->delete();
                   }
               }

            }
            if(Tools::isSubmit('catRef','catName','catDesc')){
                $id=(int)Tools::getValue('id');
                //echo "$id";
                $ref =Tools::getValue('catRef');
                //echo "$ref";
                $nom =Tools::getValue('catName');
                $desc =Tools::getValue('catDesc');


               
                $query = "UPDATE `"._DB_PREFIX_."categorie` SET cat_ref ='$ref', cat_name='$nom', cat_desc='$desc' WHERE cat_id ='$id'";
                Db::getInstance()->Execute($query);
            }

            

                //print_r(Tools::getAllValues());
        
        $categories = Db::getInstance()->executeS('SELECT * FROM `'._DB_PREFIX_.'categorie`');
        return ['categories'=>$categories,'categorieList'=>$categorieList];
    }
}
